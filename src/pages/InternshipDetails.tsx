import React, { useState, useEffect } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { ArrowLeft, ExternalLink, Bookmark, Share2, Download, MapPin, Calendar, DollarSign, Building2, Users, Clock, CheckCircle } from 'lucide-react';
import { useI18n } from '../i18n/i18n';
import { mockInternships, Internship } from '../data/mockData';
import { saveInternship, unsaveInternship, isInternshipSaved } from '../lib/storage';
import html2canvas from 'html2canvas';
import jsPDF from 'jspdf';

const InternshipDetails: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const { t } = useI18n();
  const navigate = useNavigate();
  const [internship, setInternship] = useState<Internship | null>(null);
  const [isSaved, setIsSaved] = useState(false);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (id) {
      const found = mockInternships.find(i => i.id === id);
      if (found) {
        setInternship(found);
        setIsSaved(isInternshipSaved(id));
      }
      setLoading(false);
    }
  }, [id]);

  const handleSaveToggle = () => {
    if (!internship) return;
    
    if (isSaved) {
      unsaveInternship(internship.id);
    } else {
      saveInternship(internship.id);
    }
    setIsSaved(!isSaved);
  };

  const handleShare = async () => {
    if (!internship) return;
    
    const shareData = {
      title: internship.title,
      text: `Check out this internship: ${internship.title} at ${internship.company}`,
      url: window.location.href
    };

    if (navigator.share) {
      try {
        await navigator.share(shareData);
      } catch (error) {
        const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(`${shareData.text} - ${shareData.url}`)}`;
        window.open(whatsappUrl, '_blank');
      }
    } else {
      const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(`${shareData.text} - ${shareData.url}`)}`;
      window.open(whatsappUrl, '_blank');
    }
  };

  const handleDownloadPDF = async () => {
    if (!internship) return;
    
    const tempDiv = document.createElement('div');
    tempDiv.style.padding = '40px';
    tempDiv.style.backgroundColor = 'white';
    tempDiv.style.width = '800px';
    tempDiv.style.fontFamily = 'Arial, sans-serif';
    tempDiv.innerHTML = `
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #0A4D8C; margin-bottom: 10px;">${internship.title}</h1>
        <h2 style="color: #666; margin-bottom: 20px;">${internship.company}</h2>
        <div style="display: inline-block; background: #f0f9ff; padding: 10px 20px; border-radius: 20px; margin-bottom: 20px;">
          <strong style="color: #0A4D8C;">Match Score: ${internship.matchScore}%</strong>
        </div>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Details</h3>
        <p><strong>Sector:</strong> ${internship.sector}</p>
        <p><strong>Location:</strong> ${internship.location}</p>
        <p><strong>Duration:</strong> ${internship.duration}</p>
        <p><strong>Stipend:</strong> ${internship.stipend}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Description</h3>
        <p>${internship.description}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Required Skills</h3>
        <p>${internship.skills.join(', ')}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Requirements</h3>
        <ul>
          ${internship.requirements.map(req => `<li>${req}</li>`).join('')}
        </ul>
      </div>
      
      <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd;">
        <p style="color: #666; font-size: 14px;">Generated by YuvaSetu.AI - PM Internship Scheme Initiative</p>
        <p style="color: #666; font-size: 12px;">Visit: www.yuvasetu.ai</p>
      </div>
    `;
    
    document.body.appendChild(tempDiv);
    
    try {
      const canvas = await html2canvas(tempDiv, { scale: 2 });
      const imgData = canvas.toDataURL('image/png');
      
      const pdf = new jsPDF('p', 'mm', 'a4');
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (canvas.height * pdfWidth) / canvas.width;
      
      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
      pdf.save(`${internship.title.replace(/\s+/g, '_')}_Internship.pdf`);
    } catch (error) {
      console.error('Failed to generate PDF:', error);
    } finally {
      document.body.removeChild(tempDiv);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 py-20">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="animate-spin w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    );
  }

  if (!internship) {
    return (
      <div className="min-h-screen bg-gray-50 py-20">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">Internship not found</h1>
          <p className="text-gray-600 mb-8">The internship you're looking for doesn't exist.</p>
          <Link
            to="/"
            className="inline-flex items-center space-x-2 bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition-colors font-semibold"
          >
            <ArrowLeft className="w-4 h-4" />
            <span>Back to Home</span>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-20">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Back Button */}
        <button
          onClick={() => navigate(-1)}
          className="inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700 transition-colors mb-8 font-medium"
        >
          <ArrowLeft className="w-4 h-4" />
          <span>Back</span>
        </button>

        <div className="bg-white rounded-2xl shadow-xl overflow-hidden">
          {/* Header */}
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-8">
            <div className="flex flex-col lg:flex-row lg:items-start lg:justify-between">
              <div className="flex-1">
                <h1 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
                  {internship.title}
                </h1>
                <div className="flex items-center space-x-2 mb-4">
                  <Building2 className="w-5 h-5 text-gray-600" />
                  <span className="text-xl text-gray-700 font-semibold">{internship.company}</span>
                </div>
                <div className="flex items-center space-x-4 text-sm text-gray-600">
                  <div className="flex items-center space-x-1">
                    <MapPin className="w-4 h-4" />
                    <span>{internship.location}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <Calendar className="w-4 h-4" />
                    <span>{internship.duration}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <DollarSign className="w-4 h-4" />
                    <span>{internship.stipend}</span>
                  </div>
                </div>
              </div>
              
              <div className="mt-6 lg:mt-0 flex flex-col items-end space-y-4">
                <div className="bg-white rounded-full px-6 py-2 shadow-sm">
                  <span className="text-sm font-semibold text-blue-600">
                    {internship.matchScore}% Match
                  </span>
                </div>
                <div className="flex space-x-3">
                  <a
                    href="https://internship.gov.in"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all font-semibold flex items-center space-x-2"
                  >
                    <ExternalLink className="w-4 h-4" />
                    <span>{t('rec.apply')}</span>
                  </a>
                </div>
              </div>
            </div>
          </div>

          {/* Content */}
          <div className="p-8">
            {/* Action Buttons */}
            <div className="flex flex-wrap gap-3 mb-8">
              <button
                onClick={handleSaveToggle}
                className={`flex items-center space-x-2 px-6 py-3 rounded-xl border-2 font-semibold transition-all ${
                  isSaved
                    ? 'border-green-600 text-green-600 bg-green-50 hover:bg-green-100'
                    : 'border-gray-300 text-gray-700 hover:border-gray-400 hover:bg-gray-50'
                }`}
              >
                <Bookmark className={`w-4 h-4 ${isSaved ? 'fill-current' : ''}`} />
                <span>{isSaved ? 'Saved' : t('rec.save')}</span>
              </button>
              
              <button
                onClick={handleShare}
                className="flex items-center space-x-2 border-2 border-gray-300 text-gray-700 px-6 py-3 rounded-xl hover:border-gray-400 hover:bg-gray-50 transition-all font-semibold"
              >
                <Share2 className="w-4 h-4" />
                <span>{t('rec.share')}</span>
              </button>
              
              <button
                onClick={handleDownloadPDF}
                className="flex items-center space-x-2 border-2 border-gray-300 text-gray-700 px-6 py-3 rounded-xl hover:border-gray-400 hover:bg-gray-50 transition-all font-semibold"
              >
                <Download className="w-4 h-4" />
                <span>{t('rec.download')}</span>
              </button>
            </div>

            {/* AI Insight */}
            <div className="bg-blue-50 rounded-xl p-6 mb-8">
              <h3 className="text-lg font-semibold text-blue-900 mb-2 flex items-center">
                <span className="mr-2">🤖</span>
                AI Matching Insight
              </h3>
              <p className="text-blue-800">
                {t('rec.insight')} <strong>{internship.matchReason.skills.join(', ')}</strong> {t('rec.and')} <strong>{internship.matchReason.sector}</strong>.
              </p>
            </div>

            {/* Skills */}
            <div className="mb-8">
              <h3 className="text-xl font-bold text-gray-900 mb-4">Required Skills</h3>
              <div className="flex flex-wrap gap-3">
                {internship.skills.map((skill, index) => {
                  const isMatched = internship.matchReason.skills.includes(skill);
                  return (
                    <span
                      key={index}
                      className={`px-4 py-2 rounded-full font-medium ${
                        isMatched
                          ? 'bg-green-100 text-green-800 border border-green-300'
                          : 'bg-gray-100 text-gray-700'
                      }`}
                    >
                      {isMatched && <CheckCircle className="w-4 h-4 inline mr-2" />}
                      {skill}
                    </span>
                  );
                })}
              </div>
            </div>

            {/* Description */}
            <div className="mb-8">
              <h3 className="text-xl font-bold text-gray-900 mb-4">About This Internship</h3>
              <p className="text-gray-700 leading-relaxed text-lg">{internship.description}</p>
            </div>

            {/* Requirements */}
            <div className="mb-8">
              <h3 className="text-xl font-bold text-gray-900 mb-4">Requirements</h3>
              <ul className="space-y-3">
                {internship.requirements.map((requirement, index) => (
                  <li key={index} className="flex items-start space-x-3">
                    <CheckCircle className="w-5 h-5 text-green-600 mt-0.5 flex-shrink-0" />
                    <span className="text-gray-700">{requirement}</span>
                  </li>
                ))}
              </ul>
            </div>

            {/* Company Info */}
            <div className="bg-gray-50 rounded-xl p-6 mb-8">
              <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
                <Building2 className="w-5 h-5 mr-2" />
                Company Information
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <span className="block text-sm font-medium text-gray-500">Company</span>
                  <span className="text-lg font-semibold text-gray-900">{internship.company}</span>
                </div>
                <div>
                  <span className="block text-sm font-medium text-gray-500">Sector</span>
                  <span className="text-lg font-semibold text-gray-900">{internship.sector}</span>
                </div>
                <div>
                  <span className="block text-sm font-medium text-gray-500">Location</span>
                  <span className="text-lg font-semibold text-gray-900">{internship.location}</span>
                </div>
                <div>
                  <span className="block text-sm font-medium text-gray-500">Duration</span>
                  <span className="text-lg font-semibold text-gray-900">{internship.duration}</span>
                </div>
              </div>
            </div>

            {/* Apply CTA */}
            <div className="text-center bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-8">
              <h3 className="text-2xl font-bold text-gray-900 mb-4">Ready to Apply?</h3>
              <p className="text-gray-600 mb-6">
                Don't miss out on this opportunity. Apply now through the official government portal.
              </p>
              <a
                href="https://internship.gov.in"
                target="_blank"
                rel="noopener noreferrer"
                className="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-xl hover:shadow-lg transition-all font-semibold text-lg"
              >
                <ExternalLink className="w-5 h-5" />
                <span>Apply on Internship Portal</span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default InternshipDetails;