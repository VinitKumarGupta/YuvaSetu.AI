import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { Bookmark, ExternalLink, Share2, Download, MapPin, Calendar, DollarSign, BookmarkX } from 'lucide-react';
import { useI18n } from '../i18n/i18n';
import { getSavedInternships, unsaveInternship } from '../lib/storage';
import { mockInternships, Internship } from '../data/mockData';
import html2canvas from 'html2canvas';
import jsPDF from 'jspdf';

const Saved: React.FC = () => {
  const { t } = useI18n();
  const [savedInternships, setSavedInternships] = useState<Internship[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadSavedInternships = () => {
      const savedIds = getSavedInternships();
      const saved = mockInternships.filter(internship => savedIds.includes(internship.id));
      setSavedInternships(saved);
      setLoading(false);
    };

    loadSavedInternships();
  }, []);

  const handleUnsave = (internshipId: string) => {
    unsaveInternship(internshipId);
    setSavedInternships(prev => prev.filter(internship => internship.id !== internshipId));
  };

  const handleShare = async (internship: Internship) => {
    const shareData = {
      title: internship.title,
      text: `Check out this internship: ${internship.title} at ${internship.company}`,
      url: `${window.location.origin}/details/${internship.id}`
    };

    if (navigator.share) {
      try {
        await navigator.share(shareData);
      } catch (error) {
        const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(`${shareData.text} - ${shareData.url}`)}`;
        window.open(whatsappUrl, '_blank');
      }
    } else {
      const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(`${shareData.text} - ${shareData.url}`)}`;
      window.open(whatsappUrl, '_blank');
    }
  };

  const handleDownloadPDF = async (internship: Internship) => {
    const tempDiv = document.createElement('div');
    tempDiv.style.padding = '40px';
    tempDiv.style.backgroundColor = 'white';
    tempDiv.style.width = '800px';
    tempDiv.style.fontFamily = 'Arial, sans-serif';
    tempDiv.innerHTML = `
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #0A4D8C; margin-bottom: 10px;">${internship.title}</h1>
        <h2 style="color: #666; margin-bottom: 20px;">${internship.company}</h2>
        <div style="display: inline-block; background: #f0f9ff; padding: 10px 20px; border-radius: 20px; margin-bottom: 20px;">
          <strong style="color: #0A4D8C;">Match Score: ${internship.matchScore}%</strong>
        </div>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Details</h3>
        <p><strong>Sector:</strong> ${internship.sector}</p>
        <p><strong>Location:</strong> ${internship.location}</p>
        <p><strong>Duration:</strong> ${internship.duration}</p>
        <p><strong>Stipend:</strong> ${internship.stipend}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Description</h3>
        <p>${internship.description}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Required Skills</h3>
        <p>${internship.skills.join(', ')}</p>
      </div>
      
      <div style="margin-bottom: 20px;">
        <h3 style="color: #0A4D8C; border-bottom: 2px solid #0A4D8C; padding-bottom: 5px;">Requirements</h3>
        <ul>
          ${internship.requirements.map(req => `<li>${req}</li>`).join('')}
        </ul>
      </div>
      
      <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd;">
        <p style="color: #666; font-size: 14px;">Generated by YuvaSetu.AI - PM Internship Scheme Initiative</p>
        <p style="color: #666; font-size: 12px;">Visit: www.yuvasetu.ai</p>
      </div>
    `;
    
    document.body.appendChild(tempDiv);
    
    try {
      const canvas = await html2canvas(tempDiv, { scale: 2 });
      const imgData = canvas.toDataURL('image/png');
      
      const pdf = new jsPDF('p', 'mm', 'a4');
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (canvas.height * pdfWidth) / canvas.width;
      
      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
      pdf.save(`${internship.title.replace(/\s+/g, '_')}_Internship.pdf`);
    } catch (error) {
      console.error('Failed to generate PDF:', error);
    } finally {
      document.body.removeChild(tempDiv);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 py-20">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="animate-spin w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    );
  }

  if (savedInternships.length === 0) {
    return (
      <div className="min-h-screen bg-gray-50 py-20">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="bg-white rounded-2xl shadow-lg p-12">
            <Bookmark className="w-24 h-24 text-gray-300 mx-auto mb-6" />
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              {t('saved.empty.title')}
            </h2>
            <p className="text-xl text-gray-600 mb-8">
              {t('saved.empty.subtitle')}
            </p>
            <Link
              to="/"
              className="inline-flex items-center space-x-2 bg-blue-600 text-white px-8 py-4 rounded-xl hover:bg-blue-700 transition-colors font-semibold text-lg"
            >
              <Bookmark className="w-5 h-5" />
              <span>{t('saved.empty.cta')}</span>
            </Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-20">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h1 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            {t('saved.title')}
          </h1>
          <p className="text-xl text-gray-600">
            {t('saved.subtitle')}
          </p>
          <p className="text-sm text-gray-500 mt-2">
            {savedInternships.length} internship{savedInternships.length !== 1 ? 's' : ''} saved
          </p>
        </div>

        <div className="grid gap-8">
          {savedInternships.map((internship) => (
            <div key={internship.id} className="bg-white rounded-2xl shadow-lg border border-gray-200 p-8 hover:shadow-xl transition-shadow">
              <div className="flex flex-col lg:flex-row lg:items-start lg:space-x-8">
                {/* Main Content */}
                <div className="flex-1 space-y-6">
                  <div>
                    <div className="flex items-start justify-between mb-4">
                      <div>
                        <h3 className="text-2xl font-bold text-gray-900 mb-2">
                          {internship.title}
                        </h3>
                        <p className="text-lg text-gray-600 font-medium">
                          {internship.company}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2 bg-green-50 px-4 py-2 rounded-full">
                        <Bookmark className="w-4 h-4 text-green-600 fill-current" />
                        <span className="text-sm font-semibold text-green-600">Saved</span>
                      </div>
                    </div>

                    {/* Details Grid */}
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                      <div className="flex items-center space-x-2">
                        <MapPin className="w-5 h-5 text-gray-500" />
                        <span className="text-sm text-gray-700">{internship.location}</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Calendar className="w-5 h-5 text-gray-500" />
                        <span className="text-sm text-gray-700">
                          {t('rec.duration')}: {internship.duration}
                        </span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <DollarSign className="w-5 h-5 text-gray-500" />
                        <span className="text-sm text-gray-700">
                          {t('rec.stipend')}: {internship.stipend}
                        </span>
                      </div>
                    </div>

                    {/* Skills */}
                    <div className="mb-6">
                      <div className="flex flex-wrap gap-2">
                        {internship.skills.map((skill, skillIndex) => (
                          <span
                            key={skillIndex}
                            className="px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700"
                          >
                            {skill}
                          </span>
                        ))}
                      </div>
                    </div>

                    {/* Description */}
                    <p className="text-gray-600 leading-relaxed">
                      {internship.description}
                    </p>
                  </div>
                </div>

                {/* Actions */}
                <div className="flex lg:flex-col space-x-3 lg:space-x-0 lg:space-y-3 mt-6 lg:mt-0">
                  <a
                    href="https://internship.gov.in"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center justify-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all font-semibold"
                  >
                    <ExternalLink className="w-4 h-4" />
                    <span>{t('rec.apply')}</span>
                  </a>
                  
                  <button
                    onClick={() => handleShare(internship)}
                    className="flex items-center justify-center space-x-2 border-2 border-gray-300 text-gray-700 px-6 py-3 rounded-xl hover:border-gray-400 hover:bg-gray-50 transition-all font-semibold"
                  >
                    <Share2 className="w-4 h-4" />
                    <span className="hidden sm:inline">{t('rec.share')}</span>
                  </button>
                  
                  <button
                    onClick={() => handleDownloadPDF(internship)}
                    className="flex items-center justify-center space-x-2 border-2 border-gray-300 text-gray-700 px-6 py-3 rounded-xl hover:border-gray-400 hover:bg-gray-50 transition-all font-semibold"
                  >
                    <Download className="w-4 h-4" />
                    <span className="hidden sm:inline">{t('rec.download')}</span>
                  </button>
                  
                  <button
                    onClick={() => handleUnsave(internship.id)}
                    className="flex items-center justify-center space-x-2 border-2 border-red-300 text-red-700 px-6 py-3 rounded-xl hover:border-red-400 hover:bg-red-50 transition-all font-semibold"
                  >
                    <BookmarkX className="w-4 h-4" />
                    <span className="hidden sm:inline">{t('saved.unsave')}</span>
                  </button>
                  
                  <Link
                    to={`/details/${internship.id}`}
                    className="flex items-center justify-center space-x-2 border-2 border-orange-300 text-orange-700 px-6 py-3 rounded-xl hover:border-orange-400 hover:bg-orange-50 transition-all font-semibold"
                  >
                    <span>{t('common.view')}</span>
                  </Link>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Saved;